Index: src/src/mafia_42/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package mafia_42;\n\nimport java.util.*;\nimport java.lang.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        Random random = new Random();\n\n        AsciiArtPrinter.startLogo();\n\n        // 참가자 이름 입력 받기\n        System.out.println(\"게임에 참가하는 인원 수를 입력하세요(최소 4명, 최대 8명):\");\n        int numOfPlayers = scanner.nextInt();\n        scanner.nextLine(); // 개행문자 제거\n\n\n        while (numOfPlayers < 4 || numOfPlayers > 8) {\n            System.out.println(\"잘못된 입력입니다. 최소 5명, 최대 8명까지 입력해주세요.\");\n            System.out.println(\"게임에 참가하는 인원 수를 입력하세요(최소 4명, 최대 8명):\");\n            numOfPlayers = scanner.nextInt();\n            scanner.nextLine(); // 개행문자 제거\n        }\n\n        ArrayList<String> players = new ArrayList<>();\n        ArrayList<String> deadPlayers = new ArrayList<>();\n\n        for (int i = 0; i < numOfPlayers; i++) {\n            System.out.print(\"참가자 \" + (i + 1) + \"의 이름을 입력하세요: \");\n            String name = scanner.nextLine();\n            players.add(name);\n        }\n\n\n        // 마피아, 의사, 경찰 랜덤 선택\n        String mafia = players.get(random.nextInt(numOfPlayers));\n        String doctor = players.get(random.nextInt(numOfPlayers));\n        String police = players.get(random.nextInt(numOfPlayers));\n        String mafia2=\"\";\n        // 중복되는 역할이 없도록 while문 추가\n        while (mafia.equals(doctor) || mafia.equals(police) || doctor.equals(police)) {\n            doctor = players.get(random.nextInt(numOfPlayers));\n            police = players.get(random.nextInt(numOfPlayers));\n        }\n\n        // 6명 이상일 경우 추가 마피아 랜덤 선택\n        if (numOfPlayers >= 6) {\n             mafia2= players.get(random.nextInt(numOfPlayers));\n            while (mafia2.equals(mafia) || mafia2.equals(doctor) || mafia2.equals(police)) {\n                mafia2 = players.get(random.nextInt(numOfPlayers));\n            }\n\n        }\nif(numOfPlayers<6) {\n    System.out.println(\"게임 참가자: \" + players);\n    System.out.println(\"마피아: \" + mafia);\n    System.out.println(\"의사: \" + doctor);\n    System.out.println(\"경찰: \" + police);\n}\nif(numOfPlayers>=6){\n    System.out.println(\"게임 참가자: \" + players);\n    System.out.println(\"마피아: \" + mafia);\n    System.out.println(\"마피아2: \"+mafia2);\n    System.out.println(\"의사: \" + doctor);\n    System.out.println(\"경찰: \" + police);\n}\n\n        int Round = 1;\n        while (true) {\n            System.out.println(\"\\nRound \" + Round);\n            // 밤이 되었습니다.\n            System.out.println(\"밤이 되었습니다.\");\n\n            // 마피아가 죽일 대상을 선택합니다.\n            String mafiaTarget = \"\";\n            while (true) {\n                AsciiArtPrinter.mafiaLogo();\n                System.out.print(\"마피아는 누구를 죽이겠습니까? \");\n                System.out.println(\"\\n현재 살아있는 인원 : \" + players);\n                mafiaTarget = scanner.nextLine();\n                if (players.contains(mafiaTarget) && !deadPlayers.contains(mafiaTarget)) {\n                    if(mafiaTarget.equals(mafia)||mafiaTarget.equals(mafia2)){\n                        System.out.println(\"마피아는 마피아를 죽일 수 없습니다. 다시 선택해주세요.\");\n                    }else{\n                        break;}\n\n                } else if (deadPlayers.contains(mafiaTarget)) {\n                    System.out.println(\"이미 죽은 플레이어입니다. 다시 선택해주세요.\");\n                } else {\n                    System.out.println(\"잘못된 입력입니다. 다시 입력해주세요.\");\n                }\n\n            }\n\n            // 의사가 살릴 대상을 선택합니다.\n            String doctorTarget = \"\";\n            if (!deadPlayers.contains(doctor)) {\n                doctorTarget = \"\";\n                while (true) {\n                    System.out.print(\"의사는 누구를 살리겠습니까? \");\n                    doctorTarget = scanner.nextLine();\n                    if (players.contains(doctorTarget) && !deadPlayers.contains(doctorTarget)) {\n                        break;\n                    } else if (deadPlayers.contains(doctorTarget)) {\n                        System.out.println(doctorTarget + \"님은 이미 죽은 상태입니다. 다시 선택해주세요.\");\n                    } else {\n                        System.out.println(\"잘못된 입력입니다. 다시 입력해주세요.\");\n                    }\n                }\n            } else {\n                System.out.println(\"의사가 이미 사망했으므로 의사는 역할을 수행할 수 없습니다.\");\n            }\n            // 경찰이 조사할 대상을 선택합니다.\n            if (!deadPlayers.contains(police)) {\n                String policeTarget = \"\";\n                while (true) {\n                    System.out.print(\"경찰은 누구를 조사하겠습니까? \");\n                    policeTarget = scanner.nextLine();\n                    if (players.contains(policeTarget) && !policeTarget.equals(police) && !deadPlayers.contains(policeTarget)) {\n                        break;\n                    } else if (policeTarget.equals(police)) {\n                        System.out.println(\"경찰은 자신을 조사할 수 없습니다. 다시 선택해주세요.\");\n                    } else if (deadPlayers.contains(policeTarget)) {\n                        System.out.println(policeTarget + \"님은 이미 죽은 상태입니다. 다시 선택해주세요.\");\n                    } else {\n                        System.out.println(\"잘못된 입력입니다. 다시 입력해주세요.\");\n                    }\n                }\n                // 경찰이 선택한 대상이 마피아인지 아닌지 확인합니다.\n                if (mafia.equals(policeTarget)) {\n                    System.out.println(policeTarget + \"님은 마피아입니다.\");\n                }else if(mafia2.equals(policeTarget)){\n                    System.out.println(policeTarget+\"님은 마피아입니다.\");\n                }\n                else {\n                    System.out.println(policeTarget + \"님은 마피아가 아닙니다.\");\n                }\n            } else {\n                System.out.println(\"경찰이 사망했으므로 경찰은 역할을 수행할 수 없습니다.\");\n            }\n\n\n            // 마피아와 의사가 선택한 대상이 같은 경우\n            if (mafiaTarget.equals(doctorTarget)) {\n                System.out.println(\"의사의 치료로 인해 \" + mafiaTarget + \"님이 살아났습니다.\");\n            } else {\n                System.out.println(mafiaTarget + \"님이 죽었습니다.\");\n                players.remove(mafiaTarget);\n                deadPlayers.add(mafiaTarget);\n            }\n            if((players.size()<=2&&(players.contains(mafia)||players.contains(mafia2)))||\n                    (players.size()<=4&&(players.contains(mafia)&&players.contains(mafia2)))\n            ){\n                System.out.println(\"시민의 수보다 마피아의 수가 같거나 많습니다! 마피아의 승리입니다!\");\n            }\n\n            // 낮이 되었을 때\n            System.out.println(\"\\n낮이 되었습니다.\");\n            System.out.println(\"3분간 회의를 진행합니다.\");\n            Meeting meeting = new Meeting(players);\n            Thread meetingThread = new Thread(meeting.toString());\n            meetingThread.start();\n            try {\n                Thread.sleep(3 * 1000); // 3분 대기\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            // 투표시간\n            System.out.println(\"\\n=== 투표 시간 ===\");\n            System.out.println(players);\n            HashMap<String, Integer> votes = new HashMap<>(); // 각 참가자별 득표수를 저장할 HashMap\n\n            for (String player : players) {\n                if (!deadPlayers.contains(player)) { // 이미 죽은 참가자는 제외\n                    boolean voted = false; // 투표 완료 여부를 나타내는 변수\n                    while (!voted) { // 투표가 완료될 때까지 반복\n                        System.out.print(player + \"님, 투표하실 분을 입력하세요: \");\n                        String vote = scanner.nextLine();\n                        if (!deadPlayers.contains(vote)) { // 죽은 참가자에 대한 투표 불가\n                            if (votes.containsKey(vote)) { // 이미 투표된 참가자의 득표수 증가\n                                votes.put(vote, votes.get(vote) + 1);\n                            } else { // 처음 투표된 참가자는 득표수 1로 초기화\n                                votes.put(vote, 1);\n                            }\n                            voted = true; // 투표가 완료됨을 표시\n                        } else {\n                            System.out.println(\"죽은 참가자에게는 투표할 수 없습니다. 다시 입력해주세요.\");\n                        }\n                    }\n                }\n            }\n\n\n            // 최다 득표수를 얻은 참가자를 구함\n            int maxVoteCount = 0;\n            String maxVotePlayer = \"\";\n            for (Map.Entry<String, Integer> entry : votes.entrySet()) {\n                String player = entry.getKey();\n                int voteCount = entry.getValue();\n                if (voteCount > maxVoteCount) {\n                    maxVoteCount = voteCount;\n                    maxVotePlayer = player;\n                } else if (voteCount == maxVoteCount) { // 득표수가 같을 경우 무효 표시\n                    maxVotePlayer = \"무효\";\n                }\n            }\n\n            // 최다 득표수를 얻은 참가자가 있을 경우 해당 참가자 제거 후 결과 출력\n            if (!maxVotePlayer.equals(\"무효\")) {\n                System.out.println(\"\\n\" + maxVotePlayer + \"님이 최다 득표수(\" + maxVoteCount + \"표)를 얻어 처형됩니다.\");\n                players.remove(maxVotePlayer);\n                deadPlayers.add(maxVotePlayer);\n                if(deadPlayers.contains(mafia)&&deadPlayers.contains(mafia2)){\n                    System.out.println(\"마피아를 모두 검거했습니다! 시민의 승리입니다!\");\n                    break;\n                }\n                else if((players.size()<=2&&(players.contains(mafia)||players.contains(mafia2)))||\n                        (players.size()<=4&&(players.contains(mafia)&&players.contains(mafia2)))){\n                    System.out.println(\"시민의 수보다 마피아의 수가 같거나 많습니다! 마피아의 승리입니다!\");\n                    break;\n                }\n\n\n            } else { // 무효 표시가 된 경우 결과 출력\n                System.out.println(\"\\n투표가 무효 처리되었습니다. 동점이거나 모든 참가자가 투표를 거부했습니다.\");\n            }\n\n\n            Round++;\n\n        }\n    }\n}\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/src/mafia_42/Main.java b/src/src/mafia_42/Main.java
--- a/src/src/mafia_42/Main.java	(revision d8ef8f8530bb6bc0ea8c455f000a15d122932c11)
+++ b/src/src/mafia_42/Main.java	(date 1684049652003)
@@ -60,7 +60,7 @@
 }
 if(numOfPlayers>=6){
     System.out.println("게임 참가자: " + players);
-    System.out.println("마피아: " + mafia);
+    System.out.println("마피아1: " + mafia);
     System.out.println("마피아2: "+mafia2);
     System.out.println("의사: " + doctor);
     System.out.println("경찰: " + police);
